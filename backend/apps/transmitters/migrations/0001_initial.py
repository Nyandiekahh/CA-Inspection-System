# Generated by Django 4.2.7 on 2025-05-25 02:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('broadcasters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudioTransmitterLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(blank=True, max_length=200)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('frequency', models.CharField(blank=True, max_length=100, verbose_name='Frequency (MHz)')),
                ('polarization', models.CharField(blank=True, max_length=50)),
                ('signal_description', models.TextField(blank=True, verbose_name='Description of Signal Reception and or Re-transmission')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('general_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studio_links', to='broadcasters.generaldata')),
            ],
            options={
                'db_table': 'studio_transmitter_links',
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_type', models.CharField(choices=[('band_pass', 'Band Pass Filter'), ('notch', 'Notch Filter')], max_length=20, verbose_name='Type')),
                ('manufacturer', models.CharField(blank=True, max_length=200)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('frequency', models.CharField(blank=True, max_length=100, verbose_name='Frequency (MHz) or TV Channel Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('general_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='broadcasters.generaldata')),
            ],
            options={
                'db_table': 'filters',
            },
        ),
        migrations.CreateModel(
            name='Exciter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(blank=True, max_length=200)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('nominal_power', models.CharField(blank=True, max_length=50, verbose_name='Nominal Power (W)')),
                ('actual_reading', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('general_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exciters', to='broadcasters.generaldata')),
            ],
            options={
                'db_table': 'exciters',
            },
        ),
        migrations.CreateModel(
            name='Amplifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(blank=True, max_length=200)),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('nominal_power', models.CharField(blank=True, max_length=50, verbose_name='Nominal Power (W)')),
                ('actual_reading', models.CharField(blank=True, max_length=50)),
                ('rf_output_connector_type', models.CharField(blank=True, max_length=100)),
                ('frequency_range', models.CharField(blank=True, max_length=100)),
                ('transmit_frequency', models.CharField(blank=True, max_length=100, verbose_name='Transmit Frequency (MHz or TV Channel Number)')),
                ('frequency_stability', models.CharField(blank=True, max_length=50, verbose_name='Frequency Stability (ppm)')),
                ('harmonics_suppression_level', models.CharField(blank=True, max_length=50, verbose_name='Harmonics Suppression Level (dB)')),
                ('spurious_emission_level', models.CharField(blank=True, max_length=50, verbose_name='Spurious Emission Level (dB)')),
                ('has_internal_audio_limiter', models.BooleanField(default=False, verbose_name='Internal Audio Limiter')),
                ('has_internal_stereo_coder', models.BooleanField(default=False, verbose_name='Internal Stereo Coder')),
                ('transmitter_catalog_attached', models.BooleanField(default=False, verbose_name='Transmitter Catalog (attach)')),
                ('transmit_bandwidth', models.CharField(blank=True, max_length=50, verbose_name='Transmit Bandwidth (-26dB)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('general_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amplifiers', to='broadcasters.generaldata')),
            ],
            options={
                'db_table': 'amplifiers',
            },
        ),
    ]
